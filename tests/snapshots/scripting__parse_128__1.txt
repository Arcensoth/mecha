_mecha_lineno = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2]
_mecha_helper_interpolate_message = _mecha_runtime.helpers['interpolate_message']
_mecha_helper_children = _mecha_runtime.helpers['children']
_mecha_helper_replace = _mecha_runtime.helpers['replace']
with _mecha_runtime.scope() as _mecha_var0:
    
#1

    thing = _mecha_runtime.from_module_import('demo:foo', 'thing')
    _mecha_runtime.commands.append(_mecha_helper_replace(_mecha_refs[1], arguments=_mecha_helper_children([(
#2
_mecha_helper_interpolate_message((
#2
thing), _mecha_refs[0]))])))
_mecha_var1 = _mecha_helper_replace(_mecha_refs[2], commands=_mecha_helper_children(_mecha_var0))
---
output = _mecha_var1
---
_mecha_refs[0]
<class 'mecha.contrib.scripting.ast.AstInterpolation'>
  location: SourceLocation(pos=31, lineno=2, colno=5)
  end_location: SourceLocation(pos=36, lineno=2, colno=10)
  converter: 'message'
  value:
    <class 'mecha.contrib.scripting.ast.AstIdentifier'>
      location: SourceLocation(pos=31, lineno=2, colno=5)
      end_location: SourceLocation(pos=36, lineno=2, colno=10)
      value: 'thing'
_mecha_refs[1]
<class 'mecha.ast.AstCommand'>
  location: SourceLocation(pos=27, lineno=2, colno=1)
  end_location: SourceLocation(pos=36, lineno=2, colno=10)
  identifier: 'say:message'
  arguments:
    <class 'mecha.contrib.scripting.ast.AstInterpolation'>
      location: SourceLocation(pos=31, lineno=2, colno=5)
      end_location: SourceLocation(pos=36, lineno=2, colno=10)
      converter: 'message'
      value:
        <class 'mecha.contrib.scripting.ast.AstIdentifier'>
          location: SourceLocation(pos=31, lineno=2, colno=5)
          end_location: SourceLocation(pos=36, lineno=2, colno=10)
          value: 'thing'
_mecha_refs[2]
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=0, lineno=1, colno=1)
  end_location: SourceLocation(pos=37, lineno=3, colno=1)
  commands:
    <class 'mecha.ast.AstCommand'>
      location: SourceLocation(pos=0, lineno=1, colno=1)
      end_location: SourceLocation(pos=26, lineno=1, colno=27)
      identifier: 'from:module:import:subcommand'
      arguments:
        <class 'mecha.ast.AstResourceLocation'>
          location: SourceLocation(pos=5, lineno=1, colno=6)
          end_location: SourceLocation(pos=13, lineno=1, colno=14)
          is_tag: False
          namespace: 'demo'
          path: 'foo'
        <class 'mecha.ast.AstCommand'>
          location: SourceLocation(pos=21, lineno=1, colno=22)
          end_location: SourceLocation(pos=26, lineno=1, colno=27)
          identifier: 'from:module:import:name'
          arguments:
            <class 'mecha.ast.AstLiteral'>
              location: SourceLocation(pos=21, lineno=1, colno=22)
              end_location: SourceLocation(pos=26, lineno=1, colno=27)
              value: 'thing'
    <class 'mecha.ast.AstCommand'>
      location: SourceLocation(pos=27, lineno=2, colno=1)
      end_location: SourceLocation(pos=36, lineno=2, colno=10)
      identifier: 'say:message'
      arguments:
        <class 'mecha.contrib.scripting.ast.AstInterpolation'>
          location: SourceLocation(pos=31, lineno=2, colno=5)
          end_location: SourceLocation(pos=36, lineno=2, colno=10)
          converter: 'message'
          value:
            <class 'mecha.contrib.scripting.ast.AstIdentifier'>
              location: SourceLocation(pos=31, lineno=2, colno=5)
              end_location: SourceLocation(pos=36, lineno=2, colno=10)
              value: 'thing'
