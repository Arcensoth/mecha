_mecha_lineno = [1, 1, 1, 1, 1, 2, 2, 2]
_mecha_helper_children = _mecha_runtime.helpers['children']
_mecha_helper_replace = _mecha_runtime.helpers['replace']
with _mecha_runtime.scope() as _mecha_var0:
    foo = (
#2
'abc' + 'def')
_mecha_var1 = _mecha_helper_replace(_mecha_refs[0], commands=_mecha_helper_children(_mecha_var0))
---
output = _mecha_var1
---
_mecha_refs[0]
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=0, lineno=1, colno=1)
  end_location: SourceLocation(pos=32, lineno=5, colno=1)
  commands:
    <class 'mecha.ast.AstCommand'>
      location: SourceLocation(pos=0, lineno=1, colno=1)
      end_location: SourceLocation(pos=29, lineno=3, colno=12)
      identifier: 'statement'
      arguments:
        <class 'mecha.contrib.scripting.ast.AstAssignment'>
          location: SourceLocation(pos=0, lineno=1, colno=1)
          end_location: SourceLocation(pos=29, lineno=3, colno=12)
          operator: '='
          target:
            <class 'mecha.contrib.scripting.ast.AstAssignmentTargetIdentifier'>
              location: SourceLocation(pos=0, lineno=1, colno=1)
              end_location: SourceLocation(pos=3, lineno=1, colno=4)
              value: 'foo'
          value:
            <class 'mecha.contrib.scripting.ast.AstExpressionBinary'>
              location: SourceLocation(pos=12, lineno=2, colno=5)
              end_location: SourceLocation(pos=29, lineno=3, colno=12)
              operator: '+'
              left:
                <class 'mecha.contrib.scripting.ast.AstValue'>
                  location: SourceLocation(pos=12, lineno=2, colno=5)
                  end_location: SourceLocation(pos=17, lineno=2, colno=10)
                  value: 'abc'
              right:
                <class 'mecha.contrib.scripting.ast.AstValue'>
                  location: SourceLocation(pos=24, lineno=3, colno=7)
                  end_location: SourceLocation(pos=29, lineno=3, colno=12)
                  value: 'def'
