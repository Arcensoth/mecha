_mecha_helper_children = _mecha_runtime.helpers['children']
_mecha_helper_replace = _mecha_runtime.helpers['replace']
with _mecha_runtime.scope() as _mecha_var0:
    (2 + (- 54))
_mecha_var1 = _mecha_helper_replace(_mecha_refs[0], commands=_mecha_helper_children(_mecha_var0))
---
output = _mecha_var1
---
_mecha_refs[0]
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=0, lineno=1, colno=1)
  end_location: SourceLocation(pos=8, lineno=2, colno=1)
  commands:
    <class 'mecha.ast.AstCommand'>
      location: SourceLocation(pos=0, lineno=1, colno=1)
      end_location: SourceLocation(pos=7, lineno=1, colno=8)
      identifier: 'statement'
      arguments:
        <class 'mecha.contrib.scripting.ast.AstExpressionBinary'>
          location: SourceLocation(pos=0, lineno=1, colno=1)
          end_location: SourceLocation(pos=7, lineno=1, colno=8)
          operator: '+'
          left:
            <class 'mecha.contrib.scripting.ast.AstValue'>
              location: SourceLocation(pos=0, lineno=1, colno=1)
              end_location: SourceLocation(pos=1, lineno=1, colno=2)
              value: 2
          right:
            <class 'mecha.contrib.scripting.ast.AstExpressionUnary'>
              location: SourceLocation(pos=4, lineno=1, colno=5)
              end_location: SourceLocation(pos=7, lineno=1, colno=8)
              operator: '-'
              value:
                <class 'mecha.contrib.scripting.ast.AstValue'>
                  location: SourceLocation(pos=5, lineno=1, colno=6)
                  end_location: SourceLocation(pos=7, lineno=1, colno=8)
                  value: 54
