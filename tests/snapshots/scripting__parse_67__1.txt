_mecha_lineno = [1], [1]
_mecha_helper_get_attribute = _mecha_runtime.helpers['get_attribute']
_mecha_helper_children = _mecha_runtime.helpers['children']
_mecha_helper_replace = _mecha_runtime.helpers['replace']
with _mecha_runtime.scope() as _mecha_var0:
    (
(
(
_mecha_helper_get_attribute('foo', 'bar'))())[0])
_mecha_var1 = _mecha_helper_replace(_mecha_refs[0], commands=_mecha_helper_children(_mecha_var0))---
output = _mecha_var1
---
_mecha_refs[0]
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=0, lineno=1, colno=1)
  end_location: SourceLocation(pos=15, lineno=2, colno=1)
  commands:
    <class 'mecha.ast.AstCommand'>
      location: SourceLocation(pos=0, lineno=1, colno=1)
      end_location: SourceLocation(pos=14, lineno=1, colno=15)
      identifier: 'statement'
      arguments:
        <class 'mecha.contrib.scripting.ast.AstLookup'>
          location: SourceLocation(pos=0, lineno=1, colno=1)
          end_location: SourceLocation(pos=14, lineno=1, colno=15)
          value:
            <class 'mecha.contrib.scripting.ast.AstCall'>
              location: SourceLocation(pos=0, lineno=1, colno=1)
              end_location: SourceLocation(pos=11, lineno=1, colno=12)
              value:
                <class 'mecha.contrib.scripting.ast.AstAttribute'>
                  location: SourceLocation(pos=0, lineno=1, colno=1)
                  end_location: SourceLocation(pos=9, lineno=1, colno=10)
                  name: 'bar'
                  value:
                    <class 'mecha.contrib.scripting.ast.AstValue'>
                      location: SourceLocation(pos=0, lineno=1, colno=1)
                      end_location: SourceLocation(pos=5, lineno=1, colno=6)
                      value: 'foo'
              arguments:
                <empty>
          arguments:
            <class 'mecha.contrib.scripting.ast.AstValue'>
              location: SourceLocation(pos=12, lineno=1, colno=13)
              end_location: SourceLocation(pos=13, lineno=1, colno=14)
              value: 0
