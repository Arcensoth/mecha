_mecha_lineno = [1], [1]
_mecha_helper_children = _mecha_runtime.helpers['children']
_mecha_helper_replace = _mecha_runtime.helpers['replace']
with _mecha_runtime.scope() as _mecha_var0:
    def foo():
        return
_mecha_var1 = _mecha_helper_replace(_mecha_refs[0], commands=_mecha_helper_children(_mecha_var0))---
output = _mecha_var1
---
_mecha_refs[0]
<class 'mecha.ast.AstRoot'>
  location: SourceLocation(pos=0, lineno=1, colno=1)
  end_location: SourceLocation(pos=20, lineno=2, colno=11)
  commands:
    <class 'mecha.ast.AstCommand'>
      location: SourceLocation(pos=0, lineno=1, colno=1)
      end_location: SourceLocation(pos=20, lineno=2, colno=11)
      identifier: 'def:function:body'
      arguments:
        <class 'mecha.contrib.scripting.ast.AstFunctionSignature'>
          location: SourceLocation(pos=4, lineno=1, colno=5)
          end_location: SourceLocation(pos=9, lineno=1, colno=10)
          name: 'foo'
          arguments:
            <empty>
        <class 'mecha.ast.AstRoot'>
          location: SourceLocation(pos=14, lineno=2, colno=5)
          end_location: SourceLocation(pos=20, lineno=2, colno=11)
          commands:
            <class 'mecha.ast.AstCommand'>
              location: SourceLocation(pos=14, lineno=2, colno=5)
              end_location: SourceLocation(pos=20, lineno=2, colno=11)
              identifier: 'return'
              arguments:
                <empty>
